const map = L.map("map").setView([48.0196, 66.9237], 5);

L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
  attribution: "&copy; OpenStreetMap contributors",
}).addTo(map);

const greenIcon = L.icon({
  iconUrl: "https://cdn-icons-png.flaticon.com/512/684/684908.png",
  iconSize: [32, 32],
  iconAnchor: [16, 32],
  popupAnchor: [0, -32],
});

// –¶–µ–Ω—Ç—Ä—ã –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ —Å —Ç–∏–ø–∞–º–∏ –æ—Ç—Ö–æ–¥–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
const centers = [
  // –ê–ª–º–∞—Ç—ã
  {
    coords: [43.2330, 76.9450],
    name: "Eco Recycling –ê–ª–º–∞—Ç—ã",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [43.2500, 76.9200],
    name: "Green Point –ê–ª–º–∞—Ç—ã",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },
  {
    coords: [43.2150, 76.9400],
    name: "Recycling Hub –ê–ª–º–∞—Ç—ã",
    description: "–ú–µ—Ç–∞–ª–ª, —Å—Ç–µ–∫–ª–æ.",
    types: ["–º–µ—Ç–∞–ª–ª", "—Å—Ç–µ–∫–ª–æ"],
  },

  // –ù—É—Ä-–°—É–ª—Ç–∞–Ω (–ê—Å—Ç–∞–Ω–∞)
  {
    coords: [51.1605, 71.4704],
    name: "SmartRecycle –ù—É—Ä-–°—É–ª—Ç–∞–Ω",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [51.1500, 71.4600],
    name: "EcoPoint –ù—É—Ä-–°—É–ª—Ç–∞–Ω",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },
  {
    coords: [51.1700, 71.4800],
    name: "Recycle Center –ù—É—Ä-–°—É–ª—Ç–∞–Ω",
    description: "–ú–µ—Ç–∞–ª–ª, —Å—Ç–µ–∫–ª–æ.",
    types: ["–º–µ—Ç–∞–ª–ª", "—Å—Ç–µ–∫–ª–æ"],
  },

  // –®—ã–º–∫–µ–Ω—Ç
  {
    coords: [42.3417, 69.5901],
    name: "–≠–∫–æ–õ–∞–π—Ñ –®—ã–º–∫–µ–Ω—Ç",
    description: "–ë–∞—Ç–∞—Ä–µ–π–∫–∏, –ø–ª–∞—Å—Ç–∏–∫.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫"],
  },
  {
    coords: [42.3300, 69.5800],
    name: "GreenWay –®—ã–º–∫–µ–Ω—Ç",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },

  // –ö–∞—Ä–∞–≥–∞–Ω–¥–∞
  {
    coords: [49.8031, 73.1021],
    name: "–≠–∫–æ–ì–æ—Ä–æ–¥ –ö–∞—Ä–∞–≥–∞–Ω–¥–∞",
    description: "–¶–∏–∫–ª —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [49.8100, 73.1100],
    name: "Recycle Karaganda",
    description: "–ü–ª–∞—Å—Ç–∏–∫ –∏ –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–º–µ—Ç–∞–ª–ª"],
  },

  // –ê–∫—Ç–∞—É
  {
    coords: [43.652, 51.1975],
    name: "EcoPoint –ê–∫—Ç–∞—É",
    description: "–ü–ª–∞—Å—Ç–∏–∫, —Å—Ç–µ–∫–ª–æ, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [43.6550, 51.2000],
    name: "GreenWay –ê–∫—Ç–∞—É",
    description: "–ë—É–º–∞–≥–∞, –ø–ª–∞—Å—Ç–∏–∫.",
    types: ["–±—É–º–∞–≥–∞", "–ø–ª–∞—Å—Ç–∏–∫"],
  },

  // –ê–∫—Ç–æ–±–µ
  {
    coords: [50.2839, 57.167],
    name: "KazRecycle –ê–∫—Ç–æ–±–µ",
    description: "–°–±–æ—Ä –æ—Ç –±–∏–∑–Ω–µ—Å–∞ –∏ –≥—Ä–∞–∂–¥–∞–Ω.",
    types: ["–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [50.2800, 57.1600],
    name: "EcoHub –ê–∫—Ç–æ–±–µ",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },

  // –ö–æ—Å—Ç–∞–Ω–∞–π
  {
    coords: [53.2194, 63.6287],
    name: "Green Center –ö–æ—Å—Ç–∞–Ω–∞–π",
    description: "–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞, –º–µ—Ç–∞–ª–ª.",
    types: ["–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [53.2200, 63.6300],
    name: "Recycle KZ –ö–æ—Å—Ç–∞–Ω–∞–π",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },

  // –ü–∞–≤–ª–æ–¥–∞—Ä
  {
    coords: [52.2912, 76.9455],
    name: "EcoPoint –ü–∞–≤–ª–æ–¥–∞—Ä",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [52.2900, 76.9400],
    name: "Recycle Pavlodar",
    description: "–ë—É–º–∞–≥–∞, –ø–ª–∞—Å—Ç–∏–∫.",
    types: ["–±—É–º–∞–≥–∞", "–ø–ª–∞—Å—Ç–∏–∫"],
  },

  // –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫
  {
    coords: [54.8753, 69.1617],
    name: "Green Planet –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },
  {
    coords: [54.8700, 69.1600],
    name: "Recycle Center –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–º–µ—Ç–∞–ª–ª"],
  },

  // –£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫
  {
    coords: [49.9478, 82.6232],
    name: "Eco Recycling –£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },
  {
    coords: [49.9500, 82.6200],
    name: "Green Hub –£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫",
    description: "–ú–µ—Ç–∞–ª–ª, —Å—Ç–µ–∫–ª–æ.",
    types: ["–º–µ—Ç–∞–ª–ª", "—Å—Ç–µ–∫–ª–æ"],
  },

  // –¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω
  {
    coords: [45.0000, 78.4000],
    name: "EcoPoint –¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },

  // –¢–µ–º–∏—Ä—Ç–∞—É
  {
    coords: [49.7722, 72.9333],
    name: "Recycle Temirtau",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–º–µ—Ç–∞–ª–ª"],
  },

  // –¢–∞—Ä–∞–∑
  {
    coords: [42.9000, 71.4000],
    name: "EcoCenter –¢–∞—Ä–∞–∑",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞"],
  },

  // –ö—ã–∑—ã–ª–æ—Ä–¥–∞
  {
    coords: [44.8500, 65.5000],
    name: "GreenWay –ö—ã–∑—ã–ª–æ—Ä–¥–∞",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –±—É–º–∞–≥–∞, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–±—É–º–∞–≥–∞", "–º–µ—Ç–∞–ª–ª"],
  },

  // –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π)
  {
    coords: [54.8790, 69.1650],
    name: "Recycle Plus –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫",
    description: "–ü–ª–∞—Å—Ç–∏–∫, –º–µ—Ç–∞–ª–ª.",
    types: ["–ø–ª–∞—Å—Ç–∏–∫", "–º–µ—Ç–∞–ª–ª"],
  },
];

let markers = [];

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—É —Å —É—á—ë—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ —Ç–∏–ø–∞–º –æ—Ç—Ö–æ–¥–æ–≤
 * @param {string[]} filterTypes - –º–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 */
function addMarkers(filterTypes) {
  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–µ—Ç–∫–∏ —Å –∫–∞—Ä—Ç—ã
  markers.forEach((marker) => map.removeLayer(marker));
  markers = [];

  centers.forEach((center) => {
    // –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä –ø—É—Å—Ç–æ–π –∏–ª–∏ —Ç–∏–ø –æ—Ç—Ö–æ–¥–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
    if (
      filterTypes.length === 0 ||
      center.types.some((type) => filterTypes.includes(type))
    ) {
      const marker = L.marker(center.coords, { icon: greenIcon })
        .addTo(map)
        .bindPopup(`<b>${center.name}</b><br>${center.description}`);

      markers.push(marker);
    }
  });
}

// –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–µ—Ç–∫–∏ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
const filters = Array.from(document.querySelectorAll(".filter"));
let activeFilters = filters.filter((ch) => ch.checked).map((ch) => ch.value);

addMarkers(activeFilters);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
filters.forEach((checkbox) => {
  checkbox.addEventListener("change", () => {
    activeFilters = filters.filter((ch) => ch.checked).map((ch) => ch.value);
    addMarkers(activeFilters);
  });
});

// –ö–Ω–æ–ø–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const locateBtn = document.getElementById("locate-btn");
locateBtn.addEventListener("click", () => {
  if (!navigator.geolocation) {
    alert("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.");
    return;
  }

  locateBtn.disabled = true;
  locateBtn.textContent = "–û–ø—Ä–µ–¥–µ–ª—è–µ–º...";

  navigator.geolocation.getCurrentPosition(
    (pos) => {
      const { latitude, longitude } = pos.coords;
      map.setView([latitude, longitude], 14);

      // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userMarker = L.circleMarker([latitude, longitude], {
        radius: 10,
        color: "#2f7a33",
        fillColor: "#3a9a43",
        fillOpacity: 0.7,
      }).addTo(map);

      userMarker.bindPopup("–í—ã –∑–¥–µ—Å—å").openPopup();

      locateBtn.disabled = false;
      locateBtn.textContent = "üìç –ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ";
    },
    () => {
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.");
      locateBtn.disabled = false;
      locateBtn.textContent = "üìç –ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ";
    }
  );
});

// --- –°–∫–∞–Ω–µ—Ä QR-–∫–æ–¥–æ–≤ ---

const resultContainer = document.getElementById("qr-result");
const productInfo = document.getElementById("product-info");
const rescanBtn = document.getElementById("rescan-btn");
const qrReader = new Html5Qrcode("qr-reader");

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥—É–∫—Ç–µ –ø–æ —à—Ç—Ä–∏—Ö–∫–æ–¥—É —Å OpenFoodFacts
 * @param {string} barcode - —à—Ç—Ä–∏—Ö–∫–æ–¥ –ø—Ä–æ–¥—É–∫—Ç–∞
 */
function fetchProductInfo(barcode) {
  productInfo.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...";
  fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json`)
    .then((res) => res.json())
    .then((data) => {
      if (data.status === 1) {
        const product = data.product;
        productInfo.innerHTML = `
          <h4>${product.product_name || "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"}</h4>
          <p>–ë—Ä–µ–Ω–¥: ${product.brands || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}</p>
          <p>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.categories || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}</p>
          <p>–≠–∫–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å: ${product.ecoscore_grade || "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}</p>
          <a href="${product.url}" target="_blank" rel="noopener noreferrer">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
        `;
      } else {
        productInfo.innerHTML = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
      }
    })
    .catch(() => {
      productInfo.innerHTML = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.";
    });
}

function startQrScanner() {
  qrReader
    .start(
      { facingMode: "environment" },
      {
        fps: 10,
        qrbox: 250,
      },
      (decodedText) => {
        qrReader.stop().then(() => {
          resultContainer.style.display = "block";
          fetchProductInfo(decodedText);
        });
      },
      (error) => {
        // –ú–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        // console.warn(`QR scan error: ${error}`);
      }
    )
    .catch((err) => {
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫–∞–Ω–µ—Ä–∞: ${err}`);
    });
}

// –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
startQrScanner();

// –ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
rescanBtn.addEventListener("click", () => {
  productInfo.innerHTML = "";
  resultContainer.style.display = "none";
  startQrScanner();
});
